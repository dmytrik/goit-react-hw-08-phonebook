{"version":3,"file":"static/js/310.aa0346cf.chunk.js","mappings":"8NAEaA,EAAOC,EAAAA,EAAAA,KAAH,qG,GAMIA,EAAAA,EAAAA,MAAH,qEAIGA,EAAAA,EAAAA,MAAH,4DAIIA,EAAAA,EAAAA,OAAH,wEAICA,EAAAA,EAAAA,KAAH,gE,wFC+GjB,EAnHkB,WAChB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IACnC,GAAwBT,EAAAA,EAAAA,WAAS,GAAjC,eAAOU,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAA8B,KAAjBb,EAAMc,QAAqC,KAApBZ,EAASY,OACnD,GAAIV,EAAW,CACb,MAA+BA,EAAvBW,QAAAA,OAAR,MAAkB,GAAlB,EACA,GACO,MAFwBX,EAATY,KAGlBC,MAAM,+CACNN,GAASO,EAAAA,EAAAA,WAITD,MAAMF,GACNJ,GAASO,EAAAA,EAAAA,KAEd,CAED,IAAMC,EAAmB,SAAAC,GACvB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHrB,EAASsB,GACT,MACF,IAAK,WACHpB,EAAYoB,GACZ,MACF,QACE,OAEL,EAYD,OACE,SAAC,KAAD,CAAKC,GAAG,OAAR,UACE,SAAC,KAAD,CAAWC,KAAK,eAAhB,UACE,UAAC5B,EAAD,CAAM6B,SAbS,SAAAN,GACnBA,EAAEO,iBACF,IAAMpB,EAAO,CACXP,MAAAA,EACAE,SAAAA,GAEFS,EAASiB,EAAAA,EAAAA,UAAyBrB,IAClCN,EAAS,IACTE,EAAY,GACb,EAIK,WACE,UAAC,KAAD,CAAa0B,MAAM,QAAQC,GAAG,OAA9B,WACE,SAAC,KAAD,qBACA,SAAC,KAAD,CACEC,YAAY,mBACZC,aAAc,CACZC,QAAS,GACTJ,MAAO,QACPK,UAAW,UAEbC,KAAK,QACLb,KAAK,QACLC,MAAOvB,EACPoC,SAAUjB,QAGd,UAAC,KAAD,CAAaU,MAAM,QAAQC,GAAG,OAA9B,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,CAAYO,KAAK,KAAjB,WACE,SAAC,KAAD,CACEC,GAAG,SACHH,KAAM1B,EAAO,OAAS,WACtBsB,YAAY,sBACZC,aAAc,CACZC,QAAS,GACTJ,MAAO,QACPK,UAAW,UAEbL,MAAM,QACNP,KAAK,WACLC,MAAOrB,EACPkC,SAAUjB,EACVoB,UAAU,OAEZ,SAAC,KAAD,CAAmBC,MAAM,SAAzB,UACE,SAAC,KAAD,CACEC,EAAE,UACFJ,KAAK,KACLK,QAlFI,kBAAMhC,GAASD,EAAf,EAmFJoB,MAAM,WACNK,UAAU,SALZ,SAOGzB,EAAO,OAAS,kBAQzB,SAAC,KAAD,CACEkC,QAAQ,OACRC,WAAW,SACXd,GAAG,OACHe,eAAe,SAJjB,UAME,SAAC,KAAD,CAAQC,YAAY,WAAWX,KAAK,SAASY,SAAUlC,EAAvD,6BAQX,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  width: 500px;\n  margin: 0 auto;\n  padding-top: 50px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  margin: 0 auto;\n`;\nexport const Submit = styled.button`\n  display: block;\n  margin: 10px auto 0 auto;\n`;\nexport const Span = styled.span`\n  text-align: center;\n  padding: 5px;\n`;\n","import { Form } from './LoginForm.styled';\nimport { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Input,\n  InputRightElement,\n  Button,\n  InputGroup,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\nimport authOperations from '../../redux/store/auth-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetError } from 'redux/store/auth';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userError = useSelector(state => state.user.error);\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const dispatch = useDispatch();\n  const isDisabled = email.trim() === '' || password.trim() === '';\n  if (userError) {\n    const { message = '', code } = userError;\n    switch (code) {\n      case 400:\n        alert('User authorization error, please try again)');\n        dispatch(resetError());\n        break;\n\n      default:\n        alert(message);\n        dispatch(resetError());\n    }\n  }\n\n  const handleUserChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password,\n    };\n    dispatch(authOperations.loginUser(user));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Box as=\"main\">\n      <Container maxW=\"container.lg\">\n        <Form onSubmit={handleSubmit}>\n          <FormControl color=\"white\" mt=\"10px\">\n            <FormLabel>Email</FormLabel>\n            <Input\n              placeholder=\"enter your email\"\n              _placeholder={{\n                opacity: 0.7,\n                color: 'white',\n                fontStyle: 'italic',\n              }}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleUserChange}\n            ></Input>\n          </FormControl>\n          <FormControl color=\"white\" mt=\"10px\">\n            <FormLabel>Password</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                pr=\"4.5rem\"\n                type={show ? 'text' : 'password'}\n                placeholder=\"enter your password\"\n                _placeholder={{\n                  opacity: 0.7,\n                  color: 'white',\n                  fontStyle: 'italic',\n                }}\n                color=\"white\"\n                name=\"password\"\n                value={password}\n                onChange={handleUserChange}\n                minLength=\"7\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button\n                  h=\"1.75rem\"\n                  size=\"sm\"\n                  onClick={handleClick}\n                  color=\"gray.500\"\n                  fontStyle=\"italic\"\n                >\n                  {show ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          {/* <Submit type=\"submit\" disabled={isDisabled}>\n            Log in\n          </Submit> */}\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            mt=\"10px\"\n            justifyContent=\"center\"\n          >\n            <Button colorScheme=\"whatsapp\" type=\"submit\" disabled={isDisabled}>\n              Sign up\n            </Button>\n          </Box>\n        </Form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n"],"names":["Form","styled","useState","email","setEmail","password","setPassword","userError","useSelector","state","user","error","show","setShow","dispatch","useDispatch","isDisabled","trim","message","code","alert","resetError","handleUserChange","e","currentTarget","name","value","as","maxW","onSubmit","preventDefault","authOperations","color","mt","placeholder","_placeholder","opacity","fontStyle","type","onChange","size","pr","minLength","width","h","onClick","display","alignItems","justifyContent","colorScheme","disabled"],"sourceRoot":""}